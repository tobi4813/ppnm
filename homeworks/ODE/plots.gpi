system "mkdir -p Plots" #-p make if Plots dont exist

# test of differential equations
set terminal svg background "white"
set output "Plots/Plot_1st_order.svg"

set key autotitle columnheader font ",18" outside center bottom
plot "data/y'=y.data" index 1 with lines linewidth 7 linecolor rgb "black"\
	,"data/y'=y.data" index 0 with lines linewidth 2 linecolor rgb "green"

set output "Plots/Plot_2nd_order.svg"
plot "data/y''=-y.data" index 1 with lines linewidth 7 linecolor rgb "black"\
	,"data/y''=-y.data" index 0 with lines linewidth 2 linecolor rgb "green"

set output "Plots/B) Plot_2nd_order.svg"
set title "y'' = -y with driver improvements" font ",24"
plot "data/B y''=-y.data" index 1 with lines linewidth 7 linecolor rgb "black"\
	,"data/B y''=-y.data" index 0 with lines linewidth 2 linecolor rgb "green"


# pendulum
set title ""
set output "Plots/Plot_pendulum.svg" 
plot "data/pendulum.data" using 1:2 with lines linewidth 4\
	,"data/pendulum.data" using 1:3 with lines linewidth 4

# eight
set output "Plots/Eight.svg"
plot "data/eight.data" using 2:3 with lines lt 2 lw 11\
	,"data/eight.data" using 6:7 with lines lt 1 lw 6\
	,"data/eight.data" using 10:11 with lines lt 3 lw 3


# relativistic planetary motion
set terminal svg background "white" size 800,2000
set size ratio -1
set key outside right

set output "Plots/GR_planets.svg"

set multiplot layout 4,1

unset xrange
unset yrange
set title "u(0) = 1, u'(0) = 0, {/symbol e} = 0, 1 revolution \n\
	since u is constant (circular motion) the stepsize keeps increasing.\n\
	Implementing a maxStepSize could fix this" font ",18"
plot "data/GRi.data" using (1/$2)*cos($1):(1/$2)*sin($1) with lines

set title "u(0) = 1, u'(0) = -0.5, {/symbol e} = 0, 1 revolution"
plot "data/GRii.data" using (1/$2)*cos($1):(1/$2)*sin($1) with lines

set title "u(0) = 1, u'(0) = -0.5, {/symbol e} = 0.01, 4 revolutions"
plot "data/GRiii.data" using (1/$2)*cos($1):(1/$2)*sin($1) with lines

set title "Donut mandala \n\
	u(0) = 1, u'(0) = -0.5, {/symbol e} = 0.01, 99 revolutions \n\
	at reduced accuracy to increase computation time"
plot "data/donut.data" using (1/$2)*cos($1):(1/$2)*sin($1) with lines


# Newtonian planetary motion
unset multiplot # cannot change output in multiplot mode
set output "Plots/newtonian_planet.svg"
set multiplot layout 3,1

set xrange [-2.2e11:2.2e11]
set yrange [-2.2e11:2.2e11]

set title "Earth around sun simulation in 0.95 year" font ",18"
plot "data/planetHighAcc.data" using 6:7 every ::::104 with lines\
	,"data/planetHighAcc.data" using 2:3 every ::::1 with points pt 3 pointsize 2 linecolor rgb "orange"	

set title "Earth around sun simulation in 1 year" font ",18"
plot "data/planetHighAcc.data" using 6:7 with lines\
	,"data/planetHighAcc.data" using 2:3 every ::::1 with points pt 3 pointsize 2 linecolor rgb "orange"	

set title "Mandala" 
plot "data/planetLowAcc.data" using 6:7 with lines\
	,"data/planetLowAcc.data" using 2:3 every ::::1 with points pt 3 pointsize 2 linecolor rgb "orange"	


# animating eight
unset key
unset multiplot
unset title
unset size

set terminal gif animate delay 5
set output "Plots/Eight_animation.gif"
stats "data/eight_lines1_anim.data" nooutput

set xrange [-1.2:1.2]
set yrange [-0.5:0.5]

do for[i=1:int(STATS_blocks)]{
	plot "data/eight_lines1_anim.data" index (i-1) with lines lt 1 lw 5 \
		,"data/eight_lines2_anim.data" index (i-1) with lines lt 2 lw 3.75 \
	    ,"data/eight_lines3_anim.data" index (i-1) with lines lt 3 lw 2.5 \
		,"data/eight_points_anim.data" index (i) every ::0::0 with points pt 7 ps 2 lt 1 \
		,"data/eight_points_anim.data" index (i) every ::1::1 with points pt 7 ps 2 lt 2 \
		,"data/eight_points_anim.data" index (i) every ::2::2 with points pt 7 ps 2 lt 3 \
}
